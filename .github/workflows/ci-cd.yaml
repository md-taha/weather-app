name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Fix permissions
        run: chmod +x ./node_modules/.bin/jest  
      - name: Run tests
        run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/


      - name: Start Minikube
        run: |
          minikube start --driver=docker

      - name: Set up Docker environment for Minikube
        run: |
          eval $(minikube -p minikube docker-env)


      - name: Build Docker image
        run: |
          docker build -t weather-app:latest .

      
      - name: Load Docker image into Minikube
        run: |
          minikube image load weather-app:latest

      
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.24.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/weather-app # Wait for deployment to complete

      
      - name: Check deployment status
        run: |
          kubectl get pods
          kubectl get svc

      
      - name: Notify Deployment Status
        run: |
          if [[ $(kubectl get deployment weather-app -o jsonpath='{.status.availableReplicas}') -gt 0 ]]; then
            echo "Deployment successful"
          else
            echo "Deployment failed"
            exit 1
          fi

      
      - name: Get Minikube service URL
        run: |
            MINIKUBE_IP=$(minikube ip)
            MINIKUBE_PORT=$(kubectl get svc weather-app-service -o jsonpath='{.spec.ports[0].nodePort}')
            echo "Service is available at http://$MINIKUBE_IP:$MINIKUBE_PORT"
